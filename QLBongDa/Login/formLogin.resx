<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btndangnhap.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAABCJJREFUSEvl
        lf1vU2UUx2/vc9vb+9Le3bZrS7eua4cRtjHbDdeMMBhba4fxLUFiMGPFbdkQ3zamwR/QGDN8YaAYowmY
        MGJcTCQLGAsKWdduATIXQDQ4ZxYWxQVEEcEoMRHFc3bvsr7cdX8A3+STPue05zxPn+c8z6HuOBUArcC2
        FNqBKLBeZTOwHdgjEnofT+gDBprqAfthgAC5pSekNWwT4v0Bx1ff13uuXqj3XhurdV88FiyYOBp0jc+S
        WFE4ObGm+MrVSMmt3xtLbiO/Rnz/fOh3nnWy5CCkkpSM2rprnVMcmg08s8p98dW7bSe6fPLIVp98Ytti
        y+k3l1pP9SyxnnzCLSVXylwyKBuPVedxh0M2PrYD/L9FSv79uq5omqWpXWpOTb1wfnXxlfN1np89HHMI
        bNy+5YAPKAWqVCoAF6AHUhVebeUSuMhKM/up6ssWR9O78EflJjYGpqh4ZybilOHCYiiqF7f7IacYB5NV
        vBkSGPodnCjfQParLoqi6feIJA3AqFZxLKimWLVr/EGnkICxrLgyBKvpwf02EvoD1YXaKT/b+afR7x+i
        GOYtsBf6d5tworCNw4kgZboiOo6PEZNpYAZJ6icWywFEJ5g+l9qf/MWy9fnb0sbmSZ0o4r8rU8I0tWWo
        pnCyBopEtdO0ybzh8QlMthDWru6/Ga/3M4jBu6SlzrOriqarzOxh1U5Tu9TUPKWVeD6M9wQG4fy61fhU
        dX4LleuXWKzaLD2XF235SSthLoRI4xil1+O5pWrzkaDru2Vm9ohqp+lFqa3jslaynHR13yKSnHkWDbtL
        bV/WWfnjMNYprjm1SRujFzSTzYP81DM3oFi+gFi8wKlytxVJw61uCasOL3Wa6vhQeFQroRZ57R3TOp7H
        6nMo4Wli1ti4JDxVJ2GcdfeKjIHKYa2kmUjR6BTNcf0QY1JCsyQ25gvJgXtd52C8QXHNKaAzmcbY8vIk
        YqzwD3PVwZEZgsERecvT13ESYe39ePjvwu8z37hUPdoXcJ4ZWlE4AeNmxTUnPLQa4BXgJaAQwIcUeYSv
        D42yZWVxKGfsS7m0fImoP34NnrHepfmnwF6puNO1fl+F4/QDDgEfw0WKa0aLYYJx+AwrpqacDE1tr7EY
        45fDvpsw0X8lggHLW7MBFre4pWG81dApd6g+lBGYPXTcMg+AK8X9f81uIB/dZxfiSWiE+CDjJOtc4iB8
        N//CLAbyyQ8h743XoYHl6UkfuN4AdjoNpM9vZmNQTYkOKF1sfgerXN9MNXivY3LkUtj3154y+6iHZ45C
        TAPmy6UCF8vEPq5cdO5SyHdzNgnyY4P3D1z13mWOMey4jxWIiUa7MFhr5Q6Vmgz7oaP2QjxOkPVizyds
        A000Re22sWSvnSXvQ0N8G3wvAy3AWqAcsAJ3nCjqf3Ofr59wcnMIAAAAAElFTkSuQmCC
</value>
  </data>
</root>